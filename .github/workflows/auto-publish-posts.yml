name: Auto-publish scheduled blog posts

on:
  schedule:
    # Run daily at 9 AM UTC (4 AM CDT / 3 AM CST)
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  publish-posts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check and publish scheduled posts
        run: |
          #!/bin/bash
          set -e
          
          # Initialize variables
          CURRENT_DATE=$(date -u +%Y-%m-%d)
          CHANGES_COUNT=0
          
          echo "Current date: $CURRENT_DATE"
          echo "Scanning for draft posts to publish..."
          
          # Process each blog post file using process substitution
          while IFS= read -r file; do
              echo "Checking file: $file"
              
              # Check if file has draft: true
              if grep -q "^draft: true" "$file"; then
                  echo "Found draft post: $file"
                  
                  # Extract the date from front matter
                  POST_DATE=$(grep "^date: " "$file" | sed 's/date: //' | tr -d ' ' | head -1)
                  
                  if [ -n "$POST_DATE" ]; then
                      echo "Post date: $POST_DATE"
                      
                      # Compare dates (if post date <= current date, publish it)
                      if [ "$POST_DATE" \< "$CURRENT_DATE" ] || [ "$POST_DATE" = "$CURRENT_DATE" ]; then
                          echo "Publishing post: $file (scheduled: $POST_DATE)"
                          
                          # Remove the draft: true line
                          sed -i '/^draft: true$/d' "$file"
                          
                          # Verify the change was successful
                          if ! grep -q "^draft: true" "$file"; then
                              CHANGES_COUNT=$((CHANGES_COUNT + 1))
                              echo "Successfully published: $file"
                          else
                              echo "Failed to remove draft line from: $file"
                          fi
                      else
                          echo "Not yet time to publish: $file (scheduled for $POST_DATE)"
                      fi
                  else
                      echo "No date found in: $file"
                  fi
              else
                  echo "Not a draft: $file"
              fi
          done < <(find main-docs/blog -name "index.md" -type f)
          
          # Report results
          echo ""
          echo "PUBLISHING SUMMARY"
          echo "=================="
          echo "Date: $CURRENT_DATE"
          echo "Posts published: $CHANGES_COUNT"
          
          # Set environment variable for next step
          echo "CHANGES_COUNT=$CHANGES_COUNT" >> $GITHUB_ENV
          
          # Check if any files were modified using git
          if git diff --quiet; then
              echo "No files were actually modified."
              echo "GIT_CHANGES=false" >> $GITHUB_ENV
          else
              echo "Git detected file changes."
              echo "GIT_CHANGES=true" >> $GITHUB_ENV
          fi

      - name: Commit and push changes
        if: env.GIT_CHANGES == 'true' && env.CHANGES_COUNT != '0'
        run: |
          echo "Committing changes..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Auto-publish scheduled blog posts for $(date -u +%Y-%m-%d)"
          git push
          echo "Changes committed and pushed successfully!"

      - name: Create summary
        run: |
          echo "## Auto-publish Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u +%Y-%m-%d)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ env.CHANGES_COUNT }}" != "0" ]; then
              echo "**${{ env.CHANGES_COUNT }} blog post(s) were successfully published!**" >> $GITHUB_STEP_SUMMARY
          else
              echo "**No posts were scheduled for publication today.**" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Workflow completed at $(date -u '+%Y-%m-%d %H:%M:%S UTC')*" >> $GITHUB_STEP_SUMMARY
